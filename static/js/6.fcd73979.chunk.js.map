{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/validators/validators.js","components/common/FormsControls/FormControls.jsx","components/common/FormsControls/FormControls.module.css","utils/helpers/form-helpers.js","components/Messenger/Messages/Messages.module.css","components/Messenger/Messages/Message/Message.jsx","components/Messenger/Messages/Message/Message.module.css","components/Messenger/Messages/AddMessageForm/AddMessageForm.tsx","components/Messenger/Messages/AddMessageForm/AddMessageForm.module.css","pages/Chat/ChatPage.module.css","pages/Chat/ChatPage.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","required","maxLengthCreator","maxLength","FormControl","Control","input","meta","touched","error","props","hasError","className","styles","formGroup","formControl","formGroupErrors","module","exports","onAfterSubmit","formName","result","dispatch","reset","Message","s","item","message","maxLength100","Textarea","FORM_NAME","reduxForm","form","onSubmitSuccess","handleSubmit","isDisableSubmit","messageCreator","onSubmit","messageCreatorWrapper","name","component","validate","disabled","ws","WebSocket","Chat","useState","readyStatus","setReadyStatus","messages","useSelector","state","chat","useDispatch","authUserId","auth","userId","useEffect","addEventListener","e","actions","setMessages","JSON","parse","data","ChatMessages","sendMessage","newMessageBody","send","messagesElements","map","m","index","chatMessageItem","currentUser","chatMessageItemInner","userInfo","path","photo","url","userName","console","log","messagesList","values","ChatPage"],"mappings":"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","file":"static/js/6.fcd73979.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required!\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length <= maxLength) return undefined;\r\n\r\n    return `Fields length more then ${maxLength} symbols`;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nexport const FormControl = Control => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${styles.formGroup} ${ hasError ? styles.error : ''}`}>\r\n            <Control className={styles.formControl} {...input} {...props} />\r\n            {\r\n                hasError\r\n                    ?\r\n                    <div className={styles.formGroupErrors}>\r\n                        <p>{error}</p>\r\n                    </div>\r\n                    : ''\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"FormControls_formGroup__2xi7S\",\"formGroupErrors\":\"FormControls_formGroupErrors__1oEpX\",\"error\":\"FormControls_error__3Nz9m\",\"formControl\":\"FormControls_formControl__ETq1M\"};","import {reset} from \"redux-form\";\r\n\r\n/**\r\n * @param {string} formName\r\n */\r\nexport const onAfterSubmit = (formName) => (result, dispatch) => dispatch(reset(formName));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__34Qfz\",\"messagesList\":\"Messages_messagesList__QQ6W2\",\"currentUser\":\"Messages_currentUser__23MjJ\"};","import s from \"./Message.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <p>{props.message.message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__6jcHk\",\"itemInner\":\"Message_itemInner__2Hz0m\"};","import * as React from \"react\";\r\nimport s from \"./AddMessageForm.module.css\"\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../../../common/FormsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {onAfterSubmit} from \"../../../../utils/helpers/form-helpers\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst Textarea = FormControl(\"textarea\");\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string,\r\n\r\n};\r\n\r\ntype PropsType = {\r\n    isDisableSubmit?: boolean\r\n};\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType, PropsType> & PropsType>\r\n    = ({handleSubmit, isDisableSubmit = false}) => {\r\n    return (\r\n        <form className={s.messageCreator} onSubmit={handleSubmit}>\r\n            <div className={s.messageCreatorWrapper}>\r\n                <div className=\"form-group\">\r\n                    <Field name=\"newMessageBody\"\r\n                           component={Textarea}\r\n                           validate={[required, maxLength100]}\r\n                           />\r\n                </div>\r\n                <div className=\"form-group justify-content-end\">\r\n                    <button className=\"btn-custom__accent\" disabled={isDisableSubmit}>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst FORM_NAME = 'addMessageForm';\r\nexport default reduxForm<FormDataType, PropsType>({\r\n    form: FORM_NAME,\r\n    onSubmitSuccess: onAfterSubmit(FORM_NAME),\r\n})(AddMessageForm);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageCreator\":\"AddMessageForm_messageCreator__38t3N\",\"messageCreatorWrapper\":\"AddMessageForm_messageCreatorWrapper__3D-KH\",\"title\":\"AddMessageForm_title__1Auxh\",\"formControl\":\"AddMessageForm_formControl__2Cc_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatMessageItem\":\"ChatPage_chatMessageItem__GWWB3\",\"userInfo\":\"ChatPage_userInfo__2F_KA\",\"currentUser\":\"ChatPage_currentUser__1Qnwe\",\"chatMessageItemInner\":\"ChatPage_chatMessageItemInner__17AcZ\"};","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {actions} from \"../../redux/chat-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport Message from \"../../components/Messenger/Messages/Message/Message\";\r\nimport s from \"../../components/Messenger/Messages/Messages.module.css\";\r\nimport AddMessageForm from \"../../components/Messenger/Messages/AddMessageForm/AddMessageForm\";\r\nimport {TChatMessage} from \"../../types/types\";\r\nimport Avatar from \"../../components/common/Avatar/Avatar\";\r\nimport styles from \"./ChatPage.module.css\";\r\n\r\ntype TReadyStatus = 'pending' | 'ready';\r\n\r\nconst ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\");\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <Chat/>;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n    let [readyStatus, setReadyStatus] = useState<TReadyStatus>('pending');\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const dispatch = useDispatch();\r\n    const authUserId = useSelector((state: AppStateType) => state.auth.userId);\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener(\"open\", () => {\r\n            setReadyStatus(\"ready\");\r\n        });\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        ws.addEventListener(\"message\", (e) => {\r\n            dispatch(actions.setMessages(JSON.parse(e.data)))\r\n        });\r\n    }, []);\r\n\r\n    const sendMessageHandler = (newMessageBody: string) => {\r\n        if (!newMessageBody) { return; }\r\n        ws.send(newMessageBody);\r\n    }\r\n\r\n    return <><ChatMessages messages={messages}\r\n                       sendMessage={sendMessageHandler}\r\n                       readyStatus={readyStatus}\r\n                       authUserId={authUserId}/>\r\n            </>;\r\n};\r\n\r\ntype TPropsChatMessages = {\r\n    readyStatus: TReadyStatus,\r\n    messages: TChatMessage[],\r\n    sendMessage: (newMessageBody: string) => void,\r\n    authUserId: number | null\r\n};\r\n\r\nconst ChatMessages: React.FC<TPropsChatMessages>\r\n    = ({readyStatus, messages, sendMessage, authUserId}) => {\r\n    let messagesElements = messages.map((m, index) =>\r\n        <div className={`${styles.chatMessageItem} ${m.userId === authUserId && styles.currentUser}`}>\r\n            <div className={styles.chatMessageItemInner}>\r\n                <div className={styles.userInfo}>\r\n                    <Avatar path={m.photo}\r\n                            url={`/profile/${m.userId}`}/>\r\n                    <p>{m.userName}</p>\r\n                </div>\r\n                <Message key={index} message={m}/>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }): void => {\r\n        sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    console.log(readyStatus === \"ready\");\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.messagesList}> {messagesElements} </div>\r\n            <AddMessageForm onSubmit={addNewMessage} isDisableSubmit={readyStatus !== \"ready\"} />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ChatPage as React.FC;\r\n"],"sourceRoot":""}