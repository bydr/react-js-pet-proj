{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormControls.jsx","components/common/FormsControls/FormControls.module.css","utils/helpers/form-helpers.js","hoc/withAuthRedirect.tsx","components/Messenger/Messages/Messages.module.css","components/Messenger/Messages/Message/Message.jsx","components/Messenger/Messages/Message/Message.module.css","components/Messenger/Messages/AddMessageForm/AddMessageForm.tsx","components/Messenger/Messages/AddMessageForm/AddMessageForm.module.css","components/Messenger/Messenger.module.css","components/Messenger/Dialogs/Dialogs.module.css","components/Messenger/Dialogs/Dialog/Dialog.module.css","components/Messenger/Dialogs/Dialog/Dialog.jsx","components/Messenger/Dialogs/Dialogs.jsx","components/Messenger/Messages/Messages.tsx","components/Messenger/Messenger.tsx","components/Messenger/MessengerContainer.tsx"],"names":["required","value","maxLengthCreator","maxLength","length","FormControl","Control","input","meta","touched","error","props","hasError","className","styles","formGroup","formControl","formGroupErrors","module","exports","onAfterSubmit","formName","result","dispatch","reset","withAuthRedirect","Component","useSelector","state","auth","isAuth","to","Message","s","item","message","maxLength100","Textarea","FORM_NAME","reduxForm","form","onSubmitSuccess","handleSubmit","isDisableSubmit","messageCreator","onSubmit","messageCreatorWrapper","name","component","validate","disabled","Dialog","path","dialog","id","link","activeClassName","active","itemInner","Avatar","info","Dialogs","dialogElements","dialogs","map","d","Messages","messagesElements","messages","m","messagesList","AddMessageForm","values","sendMessage","newMessageBody","Messenger","messengerPage","useDispatch","messenger","compose"],"mappings":"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","file":"static/js/5.99e7231c.chunk.js","sourcesContent":["export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required!\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length <= maxLength) return undefined;\r\n\r\n    return `Fields length more then ${maxLength} symbols`;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nexport const FormControl = Control => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${styles.formGroup} ${ hasError ? styles.error : ''}`}>\r\n            <Control className={styles.formControl} {...input} {...props} />\r\n            {\r\n                hasError\r\n                    ?\r\n                    <div className={styles.formGroupErrors}>\r\n                        <p>{error}</p>\r\n                    </div>\r\n                    : ''\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"FormControls_formGroup__2xi7S\",\"formGroupErrors\":\"FormControls_formGroupErrors__1oEpX\",\"error\":\"FormControls_error__3Nz9m\",\"formControl\":\"FormControls_formControl__ETq1M\"};","import {reset} from \"redux-form\";\r\n\r\n/**\r\n * @param {string} formName\r\n */\r\nexport const onAfterSubmit = (formName) => (result, dispatch) => dispatch(reset(formName));\r\n","import * as React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    const RedirectComponent: React.FC = ({...props}) => {\r\n        const isAuth = useSelector((state: AppStateType) => state.auth.isAuth);\r\n\r\n        if (!isAuth) return <Redirect to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return RedirectComponent;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__34Qfz\",\"messagesList\":\"Messages_messagesList__QQ6W2\",\"currentUser\":\"Messages_currentUser__23MjJ\"};","import s from \"./Message.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <p>{props.message.message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__6jcHk\",\"itemInner\":\"Message_itemInner__2Hz0m\"};","import * as React from \"react\";\r\nimport s from \"./AddMessageForm.module.css\"\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../../../common/FormsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {onAfterSubmit} from \"../../../../utils/helpers/form-helpers\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst Textarea = FormControl(\"textarea\");\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string,\r\n\r\n};\r\n\r\ntype PropsType = {\r\n    isDisableSubmit?: boolean\r\n};\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType, PropsType> & PropsType>\r\n    = ({handleSubmit, isDisableSubmit = false}) => {\r\n    return (\r\n        <form className={s.messageCreator} onSubmit={handleSubmit}>\r\n            <div className={s.messageCreatorWrapper}>\r\n                <div className=\"form-group\">\r\n                    <Field name=\"newMessageBody\"\r\n                           component={Textarea}\r\n                           validate={[required, maxLength100]}\r\n                           />\r\n                </div>\r\n                <div className=\"form-group justify-content-end\">\r\n                    <button className=\"btn-custom__accent\" disabled={isDisableSubmit}>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst FORM_NAME = 'addMessageForm';\r\nexport default reduxForm<FormDataType, PropsType>({\r\n    form: FORM_NAME,\r\n    onSubmitSuccess: onAfterSubmit(FORM_NAME),\r\n})(AddMessageForm);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageCreator\":\"AddMessageForm_messageCreator__38t3N\",\"messageCreatorWrapper\":\"AddMessageForm_messageCreatorWrapper__3D-KH\",\"title\":\"AddMessageForm_title__1Auxh\",\"formControl\":\"AddMessageForm_formControl__2Cc_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"Messenger_messenger__2j_8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Ez8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__2q1Gv\",\"link\":\"Dialog_link__30eRM\",\"info\":\"Dialog_info__3vnqx\",\"active\":\"Dialog_active__10xUt\",\"itemInner\":\"Dialog_itemInner__2rZwk\",\"name\":\"Dialog_name__8KNBK\"};","import s from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from \"../../../common/Avatar/Avatar\";\r\nconst avatarPath = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png';\r\n\r\nconst Dialog = (props) => {\r\n    let path = `/messenger/${props.dialog.id}`;\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to={path} className={s.link} activeClassName={s.active}>\r\n                <div className={s.itemInner}>\r\n                    <Avatar path={avatarPath} />\r\n                    <div className={s.info}>\r\n                        <p className={s.name}>{props.dialog.name}</p>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;\r\n","import s from \"./Dialogs.module.css\"\r\nimport Dialog from \"./Dialog/Dialog\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.dialogs.map((d) => <Dialog dialog={d} key={d.id}/> );\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {dialogElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import s from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport React from \"react\";\r\nimport {MessageType} from \"../../../types/types\";\r\n\r\ntype PropsMessagesType = {\r\n    messages: Array<MessageType>,\r\n    sendMessage: (newMessageBody: string) => void,\r\n};\r\n\r\nconst Messages: React.FC<PropsMessagesType> = ({...props}) => {\r\n    let messagesElements = props.messages.map(m => <Message key={m.id} message={m}/>);\r\n\r\n    let addNewMessage = (values: { newMessageBody: string }): void => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.messagesList}> {messagesElements} </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\n","import s from \"./Messenger.module.css\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {sendMessage} from \"../../redux/messenger-reducer\";\r\nimport {DialogType, MessageType} from \"../../types/types\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Messenger: React.FC = (props) => {\r\n\r\n    const dialogs = useSelector((state: AppStateType) => state.messengerPage.dialogs);\r\n    const messages = useSelector((state: AppStateType) => state.messengerPage.messages);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const sendMessageHandler = (newMessageBody: string) => {\r\n        dispatch(sendMessage(newMessageBody));\r\n    };\r\n\r\n    return (\r\n        <div className={s.messenger}>\r\n            <Dialogs dialogs={dialogs}/>\r\n            <Messages messages={messages}\r\n                      sendMessage={sendMessageHandler}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messenger;\r\n","import * as React from \"react\";\r\nimport Messenger from \"./Messenger\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst MessengerPage: React.FC = (props) => {\r\n    return <Messenger {...props} />;\r\n}\r\n\r\nexport default compose(withAuthRedirect)(MessengerPage) as React.FC\r\n"],"sourceRoot":""}