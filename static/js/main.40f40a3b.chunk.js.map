{"version":3,"sources":["reportWebVitals.js","redux/navbar-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Navbar/Friends/Friend/Friend.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/List/Item/Item.jsx","components/Navbar/List/List.jsx","components/Navbar/Navbar.tsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","hoc/withSuspense.js","components/Header/Header.tsx","App.tsx","index.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","components/Navbar/Friends/Friend/Friend.module.css","components/common/Preloader/Preloader.module.css","components/Header/Header.module.css","components/Navbar/Friends/Friends.module.css","components/common/Avatar/Avatar.module.css","components/Navbar/List/Item/Item.module.css","components/common/Avatar/Avatar.jsx","components/common/Preloader/Preloader.jsx","api/profile-api.ts","redux/profile-reducer.ts","redux/messenger-reducer.ts","redux/chat-reducer.tsx","utils/helpers/object-helpers.js","api/users-api.ts","redux/users-reducer.ts","components/Navbar/Navbar.module.css","api/api.ts"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","friends","id","name","list","title","path","navbarReducer","state","INITIALIZE_SUCCESS","isInitialize","initializeApp","dispatch","promise","getAuthUserData","Promise","all","type","appReducer","action","reducers","combineReducers","profilePage","profileReducer","messengerPage","messengerReducer","navbar","usersPage","usersReducer","auth","authReducer","form","formReducer","chat","chatReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Friend","props","className","s","item","itemInner","Avatar","info","friend","Friends","friendsElements","map","f","friendsList","Item","to","activeClassName","active","List","itemsElements","l","Navbar","useSelector","News","Music","Settings","withSuspense","Component","fallback","Header","isAuth","userLogin","login","useDispatch","header","src","alt","loginBlock","loginUser","onClick","logout","ProfilePage","lazy","MessengerContainer","UsersPage","ChatPage","Login","AppContainer","withRouter","useEffect","Preloader","Helmet","render","component","AppProd","ReactDOM","StrictMode","document","getElementById","authAPI","instance","get","res","data","email","password","rememberMe","captcha","post","delete","securityAPI","SET_USER_AUTH_DATA","SET_CAPTCHA_URL","userId","captchaUrl","setUserAuthData","payload","a","resultCode","EnResultCodes","Success","formData","EnResultCodesForCaptcha","CaptchaIsRequired","getCaptchaUrl","errors","messages","length","stopSubmit","_error","url","module","exports","styles","avatarWrapper","avatar","preloader","preloaderContent","preloaderGraphic","loader","version","xmlns","cx","cy","r","fill","stroke","strokeWidth","attributeName","from","begin","dur","repeatCount","profileAPI","status","put","photoFile","FormData","append","headers","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","message","likes","profile","newPostText","addPost","setStatus","getProfile","getStatus","updateStatus","updatePhoto","photosFile","console","log","photos","newPost","SEND_MESSAGE","dialogs","sendMessage","newMessageBody","newMessage","actions","setMessages","updateObjectsInArray","items","itemId","objPropName","newObjProps","usersAPI","getUsers","currentPage","count","params","follow","unfollow","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","isFetching","followingInProgress","friendState","value","followSuccess","unfollowSuccess","setUsers","setCurrentPage","pageNumber","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","totalCount","_followingToggle","APIMethod","actionCreator","bind","followed","filter","axios","create","withCredentials","baseURL"],"mappings":"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","file":"static/js/main.40f40a3b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FriendType, NavbarItemType} from \"../types/types\";\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Dima'},\r\n        {id: 2, name: 'Daniil'},\r\n        {id: 3, name: 'Petya'},\r\n    ] as Array<FriendType>,\r\n    list: [\r\n        {id: 1, title: \"Profile\", path: \"/profile\"},\r\n        {id: 2, title: \"Users\", path: \"/users\"},\r\n        {id: 3, title: \"Messenger\", path: \"/messenger\"},\r\n        {id: 4, title: \"News\", path: \"/news\"},\r\n        {id: 4, title: \"Chat\", path: \"/chat\"},\r\n        {id: 5, title: \"Music\", path: \"/music\"},\r\n        {id: 6, title: \"Settings\", path: \"/settings\"},\r\n    ] as Array<NavbarItemType>\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst navbarReducer = (state = initialState, action: any): InitialStateType => {\r\n    return state;\r\n};\r\n\r\nexport default navbarReducer;\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZE_SUCCESS = \"app/INITIALIZE_SUCCESS\";\r\n\r\ntype InitialStateType = {\r\n    isInitialize: boolean\r\n};\r\n\r\nlet initialState: InitialStateType = {\r\n    isInitialize: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any) : InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isInitialize: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action creator\r\ntype InitializeSuccessActionType = {\r\n    type: typeof INITIALIZE_SUCCESS\r\n};\r\nexport const initializeSuccess = (): InitializeSuccessActionType => ({type: INITIALIZE_SUCCESS});\r\n\r\n//thunks creator\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializeSuccess());\r\n        });\r\n};\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messengerReducer from \"./messenger-reducer\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\nimport chatReducer from \"./chat-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messengerPage: messengerReducer,\r\n    navbar: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    chat: chatReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n// key = name function in object actions\r\n// U = body function in object actions\r\nexport type TProperties<T> = T extends {[key: string]: infer U} ? U: never;\r\n\r\n// внутри <> extends означает ограничение\r\n// T принимает объект, в котором ключ = имя функции\r\n// значение = функция принимающая любые аргументы и возвращающая любое значение\r\nexport type InferTActions<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<TProperties<T>>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store;\r\n","import s from \"./Friend.module.css\";\r\nimport Avatar from \"../../../common/Avatar/Avatar\";\r\nconst avatarPath = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png';\r\n\r\nconst Friend = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <div className={s.itemInner}>\r\n                <Avatar path={avatarPath} />\r\n                <div className={s.info}>\r\n                    <p className={s.name}>{props.friend.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friend;\r\n","import s from \"./Friends.module.css\";\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n    let friendsElements = props.friends.map(f => <Friend friend={f} key={f.id}/>);\r\n\r\n    return(\r\n        <div className={s.friends}>\r\n            <h3>Friends</h3>\r\n            <div className={s.friendsList}>\r\n                {friendsElements}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;\r\n","import s from \"./Item.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Item = (props) => {\r\n    return (\r\n            <li className={s.item}>\r\n                <NavLink to={props.item.path}\r\n                         activeClassName={s.active}>\r\n                    {props.item.title}\r\n                </NavLink>\r\n            </li>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","import Item from \"./Item/Item\";\r\n\r\n\r\nconst List = (props) => {\r\n\r\n    let itemsElements = props.list.map(l => <Item item={l} key={l.id}/>);\r\n\r\n    return (\r\n        <ul>\r\n            {itemsElements}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport List from \"./List/List\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nconst Navbar: React.FC = () => {\r\n    let list = useSelector((state: AppStateType) => state.navbar.list);\r\n    let friends = useSelector((state: AppStateType) => state.navbar.friends);\r\n\r\n    return (\r\n        <nav className={s.navbar}>\r\n            <List list={list}/>\r\n            <Friends friends={friends}/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={'news'}>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import s from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={'music'}>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={'settings'}>\r\n            settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, {Suspense} from \"react\";\r\n\r\nconst withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n};\r\n\r\nexport default withSuspense;\r\n","import s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nconst Header: React.FC = (props) => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth);\r\n    const userLogin = useSelector((state: AppStateType) => state.auth.login);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png\" alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    isAuth\r\n                    ?\r\n                        <div className={s.loginUser}>\r\n                            <p>Hello, {userLogin}</p>\r\n                            <button className={\"btn-custom__accent\"} onClick={ logoutHandler }>Logout</button>\r\n                        </div>\r\n                    : <NavLink className={\"btn-custom__accent\"} to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {lazy, useEffect} from \"react\";\r\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router\";\r\nimport {Provider, useDispatch, useSelector} from \"react-redux\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport withSuspense from \"./hoc/withSuspense\";\r\nimport Header from \"./components/Header/Header\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst ProfilePage = lazy( () => import('./pages/Profile/ProfilePage'));\r\nconst MessengerContainer = lazy( () => import('./components/Messenger/MessengerContainer'));\r\nconst UsersPage = lazy( () => import('./components/Users/UsersPage'));\r\nconst ChatPage = lazy(() => import('./pages/Chat/ChatPage'));\r\nconst Login = lazy(() => import('./components/Login/Login'));\r\n\r\nconst App: React.FC = (props) => {\r\n    const isInitialize = useSelector((state: AppStateType) => state.app.isInitialize);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp());\r\n    }, []);\r\n\r\n    return <>\r\n        {!isInitialize && <Preloader/>}\r\n        <Helmet>\r\n            <title>React App</title>\r\n        </Helmet>\r\n        <div className=\"app-wrapper\">\r\n            <Header />\r\n            <Navbar />\r\n            <div className=\"content\">\r\n\r\n                <Route path=\"/profile/:userId?\"\r\n                       render={withSuspense(ProfilePage)}/>\r\n\r\n                <Route path=\"/messenger\"\r\n                       render={withSuspense(MessengerContainer)}/>\r\n\r\n                <Route path=\"/users\"\r\n                       render={withSuspense(UsersPage)}/>\r\n\r\n                <Route path=\"/chat\"\r\n                       render={withSuspense(ChatPage)}/>\r\n\r\n                <Route path=\"/login\"\r\n                       render={withSuspense(Login)}/>\r\n\r\n                <Route path=\"/news\" component={News}/>\r\n                <Route path=\"/music\" component={Music}/>\r\n                <Route path=\"/settings\" component={Settings}/>\r\n            </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nconst AppContainer = withRouter(App);\r\n\r\nconst AppProd: React.FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default AppProd;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport AppProd from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppProd />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n","import {EnResultCodes, EnResultCodesForCaptcha, instance} from \"./api\";\r\nimport {TResponse} from \"../types/types\";\r\n\r\ntype TMeResponse = {\r\n    data: {\r\n        id: number,\r\n        email: string,\r\n        login: string\r\n    },\r\n    resultCode: EnResultCodes,\r\n    messages: Array<string>\r\n};\r\ntype TLoginResponse = {\r\n    data: {\r\n        userId: number,\r\n    },\r\n    resultCode: EnResultCodes | EnResultCodesForCaptcha,\r\n    messages: Array<string>\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<TMeResponse>(`auth/me`)\r\n            .then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string) {\r\n        return instance.post<TLoginResponse>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<TResponse>(`auth/login`)\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","import {instance} from \"./api\";\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<{url: string}>(`security/get-captcha-url`)\r\n            .then(res => res.data)\r\n    },\r\n};\r\n","import {EnResultCodes, EnResultCodesForCaptcha} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\n\r\nconst SET_USER_AUTH_DATA = \"auth/SET_USER_AUTH_DATA\";\r\nconst SET_CAPTCHA_URL = \"auth/SET_CAPTCHA_URL\";\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_AUTH_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload, // из data деструктуризировали данные в значения\r\n            };\r\n        }\r\n        case SET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\n//action creators\r\ntype SetUserAuthDataActionType = {\r\n    type: typeof SET_USER_AUTH_DATA,\r\n    payload: {\r\n        userId: number | null,\r\n        email: string | null,\r\n        login: string | null,\r\n        isAuth: boolean\r\n    }\r\n};\r\nexport const setUserAuthData = (\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean): SetUserAuthDataActionType => {\r\n    return {\r\n        type: SET_USER_AUTH_DATA,\r\n        payload: { userId, email, login, isAuth }\r\n    };\r\n};\r\n\r\n\r\ntype SetCaptchaUrlActionType = {\r\n    type: typeof SET_CAPTCHA_URL,\r\n    captchaUrl: string\r\n};\r\nexport const setCaptchaUrl = (url: string):SetCaptchaUrlActionType => {\r\n    debugger;\r\n    return {\r\n        type: SET_CAPTCHA_URL,\r\n        captchaUrl: url\r\n    };\r\n};\r\n\r\n\r\n//thunk creators\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let data = await authAPI.me();\r\n    if (data.resultCode === EnResultCodes.Success) {\r\n        // debugger;\r\n        let {id, email, login} = data.data;\r\n        dispatch(setUserAuthData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (formData: any) => async (dispatch: any) => {\r\n    let {email, password, rememberMe, captcha} = formData;\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === EnResultCodes.Success) {\r\n        // debugger;\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n\r\n        if (data.resultCode === EnResultCodesForCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let errors = [];\r\n        if (data.messages.length > 0) {\r\n            errors = [...data.messages];\r\n        } else {\r\n            errors = [\"Some errors\"];\r\n        }\r\n\r\n        dispatch(stopSubmit(\"login\", { _error: errors }));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === EnResultCodes.Success) {\r\n        dispatch(setUserAuthData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    let data = await securityAPI.getCaptchaUrl();\r\n    dispatch(setCaptchaUrl(data.url));\r\n};\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__vkpam\",\"itemInner\":\"Friend_itemInner__2Csv_\",\"info\":\"Friend_info__2rqCU\",\"name\":\"Friend_name__nt8a_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2c3OM\",\"preloaderContent\":\"Preloader_preloaderContent__2Syfk\",\"loader\":\"Preloader_loader__p6xjJ\",\"hue\":\"Preloader_hue__3I9-w\",\"stroke\":\"Preloader_stroke__20Iuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2EU16\",\"loginUser\":\"Header_loginUser__1NkKa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2Yhrv\",\"friendsList\":\"Friends_friendsList__3a7au\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__3JJji\",\"avatarWrapper\":\"Avatar_avatarWrapper__15Mbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__2y1Wi\",\"active\":\"Item_active__-cpGI\"};","import React from \"react\";\r\nimport styles from \"./Avatar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Avatar = ({path, url = null}) => {\r\n    return(\r\n        <div className={styles.avatarWrapper}>\r\n            <div className={styles.avatar}>\r\n                {\r\n                    url\r\n                        ? <NavLink to={url}> <img src={path} alt=\"\" /> </NavLink>\r\n                        : <img src={path} alt=\"\"/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nconst Preloader = () => {\r\n    return <div className={s.preloader}>\r\n        <div className={s.preloaderContent}>\r\n            <div className={s.preloaderGraphic}>\r\n                <svg className={s.loader} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"transparent\" stroke=\"#f00\" strokeWidth=\"3\">\r\n                        <animateTransform attributeName=\"transform\"\r\n                                          type=\"rotate\"\r\n                                          from=\"0 20 20\" to=\"360 20 20\"\r\n                                          begin=\"0s\" dur=\"5s\"\r\n                                          repeatCount=\"indefinite\"\r\n                        />\r\n                    </circle>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;\r\n","import {instance} from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, { status: status })\r\n            .then(res => res.data);\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n};\r\n","import {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Message 01\", likes: 12},\r\n        {id: 2, message: \"Message 02\", likes: 2},\r\n        {id: 3, message: \"Message 03\", likes: 5},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = AddPostActionType | SetUserProfileActionType | SetStatusActionType | SetPhotoActionType;\r\n\r\n//state сейчас это this._state.profilePage\r\nconst profileReducer = (state = initialState, action:ActionsType) : InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 10\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\n//action creators\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n};\r\nexport const addPost = (newPostText: string): AddPostActionType => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n};\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS,\r\n    status: string\r\n};\r\nexport const setStatus = (status: string): SetStatusActionType => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\ntype SetPhotoActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n};\r\nexport const savePhotoSuccess = (photos: PhotosType): SetPhotoActionType => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n};\r\n\r\n\r\n//thunk creators\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>;\r\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n};\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data: any = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const updatePhoto = (photosFile: any): ThunkType => async (dispatch) => {\r\n    let data: any = await profileAPI.savePhoto(photosFile);\r\n    if (data.resultCode === 0) {\r\n        console.log('dispatch savePhotoSuccess');\r\n        dispatch(savePhotoSuccess(data.data.photos));\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","import {DialogType, MessageType} from \"../types/types\";\r\n\r\nconst SEND_MESSAGE = \"messenger/SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dima'},\r\n        {id: 2, name: 'Daniil'},\r\n        {id: 3, name: 'Petya'},\r\n        {id: 4, name: 'Valery'},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hello?\"},\r\n        {id: 2, message: \"Good day\"},\r\n        {id: 3, message: \"Hello React\"},\r\n        {id: 4, message: \"Greate morning\"},\r\n    ] as Array<MessageType>\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\n//state здесь это this._state.messengerPage\r\nconst messengerReducer = (state = initialState,\r\n                          action:any) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let newMessage = { id: 5, message: action.newMessageBody };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\n//action creators\r\ntype SendMessageActionType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageBody: string\r\n};\r\nexport const sendMessage = (newMessageBody:string) : SendMessageActionType => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\n//thunk creators\r\n\r\nexport default messengerReducer;\r\n","import {InferTActions} from \"./redux-store\";\r\nimport {TChatMessage} from \"../types/types\";\r\n\r\n\r\nlet initialState = {\r\n    messages: [] as TChatMessage[]\r\n};\r\ntype InitialStateType = typeof initialState;\r\ntype TActions = InferTActions<typeof actions>;\r\n\r\nconst chatReducer = (state = initialState, action: TActions): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"chat/SET_MESSAGES\": {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.messages]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    setMessages: (messages: TChatMessage[]) => ({\r\n        type: \"chat/SET_MESSAGES\",\r\n        messages\r\n    }) as const\r\n};\r\n\r\nexport default chatReducer;\r\n","export const updateObjectsInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    });\r\n};\r\n","import {TFriend, TResponse, UserType} from \"../types/types\";\r\nimport {instance} from \"./api\";\r\n\r\ntype TGetUsersResponse = {\r\n    items: Array<UserType>,\r\n    totalCount: number,\r\n    error: string | null\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, count = 10, friend: boolean | null = null) {\r\n        return instance.get<TGetUsersResponse>('users', {\r\n            params: { friend, currentPage, count }\r\n        }).then(res => res.data);\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post<TResponse>(`follow/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return instance.delete<TResponse>(`follow/${userId}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n};\r\n","import {updateObjectsInArray} from \"../utils/helpers/object-helpers\";\r\nimport {TFriend, TFriendStateItem, TResponse, UserType} from \"../types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferTActions} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nconst FOLLOW_USER = \"users/FOLLOW_USER\";\r\nconst UNFOLLOW_USER = \"users/UNFOLLOW_USER\";\r\nconst SET_USERS = \"users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"users/TOGGLE_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 7, // кол-во на странице\r\n    totalUsersCount: 0, // сколько всего пользователей\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>, // array of users ids\r\n    friendState: [\r\n        { value: null, message: \"all users\" },\r\n        { value: false, message: \"only not followed users\" },\r\n        { value: true, message: \"only followed users\" },\r\n    ] as TFriendStateItem[]\r\n};\r\ntype InitialStateType = typeof initialState;\r\n\r\n\r\nconst usersReducer = (state = initialState, action: TActions): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        }\r\n        case UNFOLLOW_USER: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId] //если true то накапливаем юзеров в процессе folowing\r\n                    : state.followingInProgress.filter(id => id !== action.userId) //иначе filter вернет новый массив id юзеров\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action creators functions\r\nexport const actions = {\r\n    //подписаться на пользователя\r\n    followSuccess: (userId: number) => ({\r\n        type: FOLLOW_USER,\r\n        userId\r\n    } as const),\r\n//отписаться от пользователя\r\n    unfollowSuccess: (userId: number) => ({\r\n        type: UNFOLLOW_USER,\r\n        userId\r\n    } as const),\r\n//закинуть в стейт всех юзеров\r\n    setUsers: (users: Array<UserType>) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const),\r\n//обновить, закинуть в стейте номер текущей страницы\r\n    setCurrentPage: (pageNumber: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: pageNumber\r\n    } as const),\r\n//установить значение всех пользователей\r\n    setTotalUsersCount: (count: number) => ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount: count\r\n    } as const),\r\n//показать / скрыть главный прелоадер\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const),\r\n//включить / отключить кнопку following\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: TOGGLE_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n};\r\ntype TActions = InferTActions<typeof actions>;\r\n\r\n\r\n//thunk creators functions\r\ntype DispatchType = Dispatch<TActions>;\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, TActions>;\r\n\r\nexport const requestUsers = (page: number, pageSize: number, friend: TFriend = null): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(page, pageSize, friend);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n        if (friend !== null) {\r\n            dispatch(actions.setCurrentPage(1));\r\n        }\r\n    };\r\n\r\n\r\nconst _followingToggle = async (APIMethod: (userId: number) => Promise<TResponse>,\r\n                                userId: number,\r\n                                actionCreator: (userId: number) => TActions,\r\n                                dispatch: DispatchType) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    let data = await APIMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId: number): ThunkType => async (dispatch) => {\r\n    await _followingToggle(usersAPI.follow.bind(this), userId, actions.followSuccess.bind(this), dispatch);\r\n};\r\n\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\r\n    await _followingToggle(usersAPI.unfollow.bind(this), userId, actions.unfollowSuccess.bind(this), dispatch);\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3guTE\"};","import axios from \"axios\";\r\n\r\n//создаем отдельный экземпляр axios\r\n// пр. для работы с разными версиями api\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\" : \"52ad0c8f-699d-4bff-950c-203e48cb3000\"\r\n    }\r\n});\r\n\r\nexport enum EnResultCodes {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum EnResultCodesForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\n"],"sourceRoot":""}